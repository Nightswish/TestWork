<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion><!--POM model의 버전-->
	<parent> <!--프로젝트의 계층 정보-->
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.1</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.springboot</groupId> <!--프로젝트를 생성하는 조직의 고유 아이디를 결정한다. 일반적으로 도메인 이름을 거꾸로 적는다.-->
	<artifactId>batchprac</artifactId> <!--프로젝트 빌드시 파일 대표이름 이다. groupId 내에서 유일해야 한다.Maven을 이용하여 빌드시 다음과 같은 규칙으로 파일이 생성 된다.
										artifactid-version.packaging. 위 예의 경우 빌드할 경우 bo-0.0.1-SNAPSHOT.war 파일이 생성된다.-->
	<version>0.0.1-SNAPSHOT</version> <!--프로젝트의 현재 버전, 프로젝트 개발 중일 때는 SNAPSHOT을 접미사로 사용-->
	<packaging>jar</packaging> <!--패키징 유형(jar, war, ear 등)-->
	<name>batchprac</name> <!--프로젝트, 프로젝트 이름-->
	<description>스피링부트 설정부터 배치까지</description> <!--프로젝트에 대한 간략한 설명-->
	<url></url> <!--프로젝트에 대한 참고 Reference 사이트-->

	<!-- 버전 관리 세션 -->
	<properties>
		<!-- 버전관리시 용이 하다. ex) 하당 자바 버전을 선언 하고 dependencies에서 다음과 같이 활용 가능 하다.
                        <version>${java.version}</version> -->
		<java.version>1.8</java.version>
<!--		<maven.compiler.source>1.8</maven.compiler.source>-->
<!--		<maven.compiler.targer>1.8</maven.compiler.targer>-->
<!--		<spring.batch.version>4.2.1.RELEASE</spring.batch.version>-->
<!--		<spring.version>5.2.2.RELEASE</spring.version>-->
<!--		<hibernate.version>5.4.10.Final</hibernate.version>-->
<!--		<apache.dbcp2.version>2.7.0</apache.dbcp2.version>-->
<!--		<h2.version>1.4.200</h2.version>-->
<!--		<junit.version>4.12</junit.version>-->
	</properties>

	<dependencies> <!--dependencies태그 안에는 프로젝트와 의존 관계에 있는 라이브러리들을 관리 한다.-->
<!--		<dependency> &lt;!&ndash; Spring MVC를 사용한 RESTful서비스를 개발하는데 사용&ndash;&gt;-->
<!--			<groupId>org.springframework.boot</groupId>-->
<!--			<artifactId>spring-boot-starter-web</artifactId>-->
<!--		</dependency>-->

		<dependency><!--Junit, Hamcrest, Mockito를 포함하는 스프링 어플리케이션을 테스트 가능하도록 한다.-->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
		</dependency>
	</dependencies>

	<build> <!--빌드에 사용할 플러그인 목록-->
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
